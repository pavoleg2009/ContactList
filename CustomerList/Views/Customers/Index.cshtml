@model List<CustomerList.Models.Customer>

@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <div class="row">
        <h2 id="cusomerPageHeader">
            Customers
            <button type="button" class="btn btn-primary pull-right" 
                    data-toggle="modal" data-target="#customerFormModalDiv" data-form-mode="Create" customer-id="0">
                New Customer
            </button>
        </h2>

    </div>

    <!-- Modal Customer Form -->
    <div class="modal fade" id="customerFormModalDiv" tabindex="-1" role="dialog" aria-labelledby="customerModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title"><span id="custotomerFormTitleLabel">New Customer</span></h4>
                </div>

                <div class="modal-body">
                    
                    <form class="form-horizontal" id="customerForm">

                        <div class="form-group">
                            <div class="col-sm-9">
                                <input type="hidden" class="form-control" id="idText">
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="firstNameText" class="col-sm-3 control-label">First Name</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="firstNameText" name="firstName" placeholder="Enter First Name" required>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="lastNameText" class="col-sm-3 control-label">Last Name</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="lastNameText" placeholder="Enter Last Name" required>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="phoneNumbeText" class="col-sm-3 control-label">Phone Number</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="phoneNumbeText" placeholder="Enter Phone Name">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="emailText" class="col-sm-3 control-label">Email address</label>
                            <div class="col-sm-9">
                                <input type="email" class="form-control" id="emailText" placeholder="Enter email">
                            </div>
                        </div>
                    </form>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button form="customerForm" type="submit" class="btn btn-primary" id="saveCustomer">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    @*Modal Delete Confirm*@
    <div class="modal fade" id="dialogModalDiv">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Please confirm:</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p><span id="dialogMessage"></span>!</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-warning" id="dialogOkButton"><span id="dialogOkButtonCaption">Ok</span></button>
                </div>
            </div>
        </div>
    </div>

    <table id="customers" class="table table-striped table-hover">
        <thead>
            <tr>
                <th class="col1">First Name</th>
                <th class="col2">Last Name</th>
                <th class="col3">Email</th>
                <th class="col4">Phone Number</th>
                <th class="col5">Actions</th>
                <th class="col6">Id</th>
            </tr>
        </thead>
        <tbody class=""></tbody>
    </table>

    @section scripts {

        @Scripts.Render("~/bundles/jqueryval")

        <script>
            $(document).ready(function() {

                var customerId = 0;
                var formMode = "";
                var selectedRow;

                var table = $("#customers").DataTable({
                    ajax: {
                        url: "/api/customers",
                        dataSrc: ""
                    },
                    columns: [

                        { data: "firstName" },
                        { data: "lastName" },
                        { data: "email" },
                        { data: "phoneNumber" },
                        { data: "id", "orderable": false,
                          render: function(data) {
                                return "<button class='btn btn-link'"
                                        + " data-toggle='modal' data-target='#customerFormModalDiv'"
                                        + " data-form-mode='Edit' data-customer-id=" + data
                                        + "><i class='fa fa-lg fa-pencil-square-o' aria-hidden='true'></i>"
                                        + "</button>"

                                        + "<button class='btn btn-link'"
                                        + "  data-toggle='modal' data-target='#dialogModalDiv'"
                                        + " data-form-mode='Delete' data-customer-id=" + data
                                        + "><i class='fa fa-lg fa-trash-o' aria-hidden='true'></i>"
                                        + "</button>";
                            }
                        },
                        { data: "id" }
                    ]
                });

                function clearForm() {
                    $('#id').val('');
                    $('#firstNameText').val('');
                    $('#lastNameText').val('');
                    $('#phoneNumbeText').val('');
                    $('#emailText').val('');
                    customerId = 0;
                }

                function fillFormWithCustomerData(id) {
                    $.ajax({
                        dataSrc: "",
                        url: "/api/customers/" + id,
                        method: "GET"
                    }).done(function (json) {

                        $('#idText').val(json.id);
                        $('#firstNameText').val(json.firstName);
                        $('#lastNameText').val(json.lastName);
                        $('#phoneNumbeText').val(json.phoneNumber);
                        $('#emailText').val(json.email);

                    }).fail(function () {
                        alert("Error trying to load data for customer!");
                        console.log("Error: " + errorThrown);
                        console.log("Status: " + status);
                        console.dir(xhr);
                    });
                };

                $('#customerFormModalDiv').on('show.bs.modal',
                    function(event) {
                        // Read data from related button (Create/Edit mode Customer Id)
                        var button = $(event.relatedTarget);
                        customerId = button.data('customer-id');
                        formMode = button.data('form-mode');

                        if (formMode === 'Create') {
                            // Set form for Create state (for creating new Customer)
                            $('#custotomerFormTitleLabel').text('New Customer');
                            clearForm();

                        } else if (formMode === 'Edit') {
                            // Set form for Edit state (for editing existing Customer)
                            $('#custotomerFormTitleLabel').text('Edit Customer');
                            fillFormWithCustomerData(customerId);

                        } else {
                            console.error('=== Error: invalid data-form-mode');
                        };
                    });

                function createCutomerObject()
                {
                    var customer = {
                        firstName: $('#firstNameText').val(),
                        lastName: $('#lastNameText').val(),
                        phoneNumber: $('#phoneNumbeText').val(),
                        email: $('#emailText').val()
                    };
                    if (formMode === "Edit") { customer.id = $('#idText').val(); }
                    return customer;
                };

                var validator = $("#customerForm").validate({
                    submitHandler: function () {

                        createCutomerObject();

                        if (formMode === "Create") {
                            createCustomer();
                        }
                        else if (formMode === "Edit") {
                            updateCustomer();
                        }
                        else { console.log("Invalid formMode"); }

                        return false;
                    }
                });

                function finalizeSuccessfulUpdate(message) {
                    $('#customerFormModalDiv').modal('hide');
                    table.ajax.reload()
                        .success(function () {
                            toastr.success(message);
                    });
                    validator.resetForm();
                };

                function createCustomer() {
                    $.ajax({
                            url: "/api/customers",
                            method: "post",
                            data: createCutomerObject()
                        })
                        .done(function () {
                            finalizeSuccessfulUpdate("New Customer Created");                                                       
                        })
                        .fail(function() {
                            toastr.error("=== Error creating customer");
                            console.log("Error: " + errorThrown);
                            console.log("Status: " + status);
                            console.dir(xhr);
                        });
                };

                function updateCustomer() {
                    $.ajax({
                            url: "/api/customers/" + customerId,
                            method: "put",
                            data: createCutomerObject()
                        })
                        .done(function () {
                            finalizeSuccessfulUpdate("New Customer Updated");
                        })
                        .fail(function() {
                            toastr.error("=== Error updating customer");
                            console.log("Error: " + errorThrown);
                            console.log("Status: " + status);
                            console.dir(xhr);
                        });
                };

                function deleteCustomer() {
                    if (customerId > 0 && formMode === 'Delete') {
                        $.ajax({
                            url: "/api/customers/" + customerId,
                            method: "delete"
                        })
                        .done(function () {
                            finalizeSuccessfulDelete("Customer Deleted");
                        })
                        .fail(function () {
                            toastr.error("=== Error deleting customer");
                            console.log("Error: " + errorThrown);
                            console.log("Status: " + status);
                            console.dir(xhr);
                        });
                    }
                };

                function finalizeSuccessfulDelete(message) {
                    $('#dialogModalDiv').modal('hide');
                    console.log(message);
                    selectedRow.remove().draw();
                    //table.ajax.reload()
                    //    .success(function () {
                    //        toastr.success(message);
                    //    });

                };

                $('#dialogModalDiv').on('show.bs.modal',
                    function (event) {
                        // Read data from related button (Create/Edit/Delete mode Customer Id
                        var button = $(event.relatedTarget);
                        customerId = button.data('customer-id');
                        formMode = button.data('form-mode');
                        selectedRow = table.row(button.parents("tr"));


                        if (formMode === 'Delete' && customerId > 0) {
                            // Set dialog for Delete state
                            $('#dialogMessage').text("Are you shure you want to delete the customer with Id=" + customerId + "?");
                            $('#dialogOkButtonCaption').text('Delete');
                            $('#dialogOkButton').off('click');
                            $('#dialogOkButton').click(deleteCustomer);
                            //fillFormWithCustomerData(customerName);

                        } else {
                            console.error('=== Error: invalid data-form-mode');
                        };
                    });

            });
        </script>
    }
